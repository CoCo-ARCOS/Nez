/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sincronizador;

import bean.Organization;
import bean.Response;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import bean.User;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.UIManager;
import logic.Api;
import logic.DBManagement;
import logic.Routes;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author Alfredo Barrón-Rodríguez
 */
public class AppAuth extends javax.swing.JFrame {

    private Routes r;
    private boolean isInGlobal;
    private User objUser;
    private DBManagement dbmanager;

    /**
     * Creates new form AuthApp
     */
    public AppAuth() {
        try {
            this.dbmanager = new DBManagement();
            r = new Routes();
            initComponents();
            //Leer tecla enter.
            enterAceptar();
        } catch (IOException | SQLException ex) {
            ex.printStackTrace();
        }

    }

    public void enterAceptar() {
        aceptar_btn.setFocusable(true);
        aceptar_btn.addKeyListener(new KeyListener() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    try {
                        verificarDatosU();
                    } catch (IOException ex) {
                        System.out.println(ex);
                    }
                }
            }

            @Override
            public void keyTyped(KeyEvent ke) {
            }

            @Override
            public void keyReleased(KeyEvent ke) {
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aceptar_btn1 = new javax.swing.JButton();
        logo_png = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        usuario_lb = new javax.swing.JLabel();
        usuario_png = new javax.swing.JLabel();
        usuario_txt = new javax.swing.JTextField();
        contraseña_lb = new javax.swing.JLabel();
        contraseña_png = new javax.swing.JLabel();
        contraseña_txt = new javax.swing.JPasswordField();
        aceptar_btn = new javax.swing.JButton();
        aceptar_btn2 = new javax.swing.JButton();
        logo_png2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        aceptar_btn1.setText("Aceptar");
        aceptar_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptar_btn1ActionPerformed(evt);
            }
        });

        logo_png.setForeground(new java.awt.Color(254, 254, 254));
        logo_png.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo.png"))); // NOI18N
        logo_png.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SkyCDS");

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(14, 7, 7));

        usuario_lb.setBackground(new java.awt.Color(255, 255, 255));
        usuario_lb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        usuario_lb.setForeground(new java.awt.Color(1, 1, 1));
        usuario_lb.setText("Usuario:");

        usuario_png.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/usuario.png"))); // NOI18N

        usuario_txt.setName(""); // NOI18N
        usuario_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuario_txtActionPerformed(evt);
            }
        });

        contraseña_lb.setBackground(new java.awt.Color(255, 255, 255));
        contraseña_lb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        contraseña_lb.setForeground(new java.awt.Color(1, 1, 1));
        contraseña_lb.setText("Contraseña:");

        contraseña_png.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/contraseña.png"))); // NOI18N

        contraseña_txt.setToolTipText("");
        contraseña_txt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                contraseña_txtFocusGained(evt);
            }
        });
        contraseña_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contraseña_txtMouseClicked(evt);
            }
        });
        contraseña_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contraseña_txtActionPerformed(evt);
            }
        });

        aceptar_btn.setText("Ingresar");
        aceptar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptar_btnActionPerformed(evt);
            }
        });

        aceptar_btn2.setText("Cancelar");
        aceptar_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptar_btn2ActionPerformed(evt);
            }
        });

        logo_png2.setForeground(new java.awt.Color(254, 254, 254));
        logo_png2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo.png"))); // NOI18N
        logo_png2.setText("jLabel1");

        jButton1.setText("Registrar usuario");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(logo_png2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usuario_lb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contraseña_lb, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usuario_png)
                            .addComponent(contraseña_png))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(contraseña_txt)
                            .addComponent(usuario_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(aceptar_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aceptar_btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(usuario_lb))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(usuario_png))
                            .addComponent(usuario_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contraseña_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(contraseña_lb)
                                .addComponent(contraseña_png)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aceptar_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aceptar_btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(logo_png2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usuario_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuario_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usuario_txtActionPerformed

    private void contraseña_txtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contraseña_txtFocusGained
        //contraseña_txt.setText("");
    }//GEN-LAST:event_contraseña_txtFocusGained

    private void contraseña_txtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contraseña_txtMouseClicked
        contraseña_txt.setText("");
    }//GEN-LAST:event_contraseña_txtMouseClicked

    private void contraseña_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contraseña_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contraseña_txtActionPerformed

    public void verificarDatosU() throws IOException {
        if (!usuario_txt.getText().equals("") && !contraseña_txt.getText().equals("")) {

            boolean result = auth(r.getGatewayRoute());
            boolean login = false;
            if (result) {
                isInGlobal = false;
                login = true;
                this.hide();
            } else {
                JOptionPane.showMessageDialog(this, "Usuario/contraseña invalidas");
            }

            App app;
            if (login) {
                try {
                    this.dbmanager.insertSession(this.objUser);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }

                app = new App(r.getGatewayRoute(), r.getMetadataRoute(), this.objUser);

                app.setVisible(true);
                new Thread() {
                    public void run() {
                        app.ejecutar();
                    }
                }.start();
            }
        } else if (usuario_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese un nombre de usuario.", "Error", 1);
        } else if (contraseña_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese una contraseña.", "Error", 1);
        }
    }

    private void aceptar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptar_btnActionPerformed
        try {
            verificarDatosU();
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_aceptar_btnActionPerformed

    private void aceptar_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptar_btn1ActionPerformed

    }//GEN-LAST:event_aceptar_btn1ActionPerformed

    private void aceptar_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptar_btn2ActionPerformed
        // TODO add your handling code here:        
        usuario_txt.setText(""); //Se eliminan los datos del usuario.
        contraseña_txt.setText("");
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_aceptar_btn2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try {
            // TODO add your handling code here:
            String url = "http://"  + r.getFrontend() + "/views/auth/registro_V.php";
            System.out.println(url);
            openWebpage(new URL(url));
        } catch (MalformedURLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public static boolean openWebpage(URI uri) {
        Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
        if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
            try {
                desktop.browse(uri);
                return true;
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return false;
    }

    public static boolean openWebpage(URL url) {
        try {
            return openWebpage(url.toURI());
        } catch (URISyntaxException e) {
            e.printStackTrace();
        }
        return false;
    }

    public boolean auth(String server) {

        Api api = new Api();
        String user = usuario_txt.getText();
        String password = contraseña_txt.getText();
        Response res_login = api._loginUser(server, user, password);

        if (res_login.getCode() == 200) {

            try {
                objUser = new User();
                JSONObject json = new JSONObject(res_login.getData());
                JSONObject jsonUser = (JSONObject) json.get("data");

                //System.out.println(jsonUser.toString());
                objUser.setToken(jsonUser.getString("tokenuser"));
                objUser.setUsername(jsonUser.getString("username"));
                objUser.setEmail(jsonUser.getString("email"));
                objUser.setApiKey(jsonUser.getString("apikey"));
                objUser.setAccesToken(jsonUser.getString("access_token"));
                objUser.setIsAdmin(jsonUser.getBoolean("isadmin"));
                objUser.setIsActive(jsonUser.getBoolean("isactive"));

                Organization org = new Organization();
                org.setToken(jsonUser.getString("tokenorg"));
                org.setAcronym(jsonUser.getString("acronym"));
                org.setFullname(jsonUser.getString("fullname"));
                objUser.setOrg(org);

                return true;
            } catch (JSONException ex) {
                Logger.getLogger(AppAuth.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return false;
    }
        
    public static void initialize(){
        UIManager.put("Tree.leafIcon", UIManager.getIcon("Tree.closedIcon"));
        try {
            DBManagement dbm = new DBManagement();
            User objUser = dbm.checkSession();
            if (objUser.isSessionIsActive() == 1) {
                Routes r;
                r = new Routes();

                App app;
                app = new App(r.getGatewayRoute(), r.getMetadataRoute(), objUser);

                app.setVisible(true);
                new Thread() {
                    public void run() {
                        app.ejecutar();
                    }
                }.start();

            } else {
                /* Create and display tshe form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new AppAuth().setVisible(true);
                    }
                });
            }

        } catch (SQLException | IOException ex) {
            ex.printStackTrace();
        }
        
    }
    public static boolean isValidIPAddress(String ip)
    {
 
        // Regex for digit from 0 to 255.
        String zeroTo255
            = "(\\d{1,2}|(0|1)\\"
              + "d{2}|2[0-4]\\d|25[0-5])";
 
        // Regex for a digit from 0 to 255 and
        // followed by a dot, repeat 4 times.
        // this is the regex to validate an IP address.
        String regex
            = zeroTo255 + "\\."
              + zeroTo255 + "\\."
              + zeroTo255 + "\\."
              + zeroTo255;
 
        // Compile the ReGex
        Pattern p = Pattern.compile(regex);
 
        // If the IP address is empty
        // return false
        if (ip == null) {
            return false;
        }
 
        // Pattern class contains matcher() method
        // to find matching between given IP address
        // and regular expression.
        Matcher m = p.matcher(ip);
 
        // Return if the IP address
        // matched the ReGex
        return m.matches();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppAuth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppAuth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppAuth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppAuth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        String filename = "config.db";
        File file = new File(filename);

        if (file.exists()) {
            initialize();

        } else {
            
            JPanel myPanel = new JPanel();
            myPanel.setPreferredSize(new Dimension(10, 10));
            
            JLabel a = new JLabel("Ingresa tu IP");
            a.setFont(new Font("Serif", Font.PLAIN, 24));
            myPanel.add(a);
            
            ImageIcon icon = new ImageIcon("Imagenes/Logo.png");
            
            Object answer = JOptionPane.showInputDialog(myPanel, myPanel, "Configuración Inicial", 0, icon, null, null);
            
            
            if(answer!=null){
                String ip = answer.toString();
                if(isValidIPAddress(ip)){
                    PrintWriter writer = null;
                    try {
                        writer = new PrintWriter(filename, "UTF-8");
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(AppAuth.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (UnsupportedEncodingException ex) {
                        Logger.getLogger(AppAuth.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    writer.println("bob.keyring\r\n" +
                                   "bob123\r\n" +
                                   "katya.abe.priv.ciph\r\n" +
                                   "\"grp:101\"\r\n" +
                                   "\"grp:101\"\r\n" +
                                   ip+":20505\r\n" +
                                   ip+":20500\r\n" +
                                   ip+":20004\r\n" +
                                   "Dispersal");
                    writer.close();
                    initialize();
                }
                else{
                    main(new String[]{});
                }
            } else {
            }
        
        }
        
        

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar_btn;
    private javax.swing.JButton aceptar_btn1;
    private javax.swing.JButton aceptar_btn2;
    private javax.swing.JLabel contraseña_lb;
    private javax.swing.JLabel contraseña_png;
    private javax.swing.JPasswordField contraseña_txt;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel logo_png;
    private javax.swing.JLabel logo_png2;
    private javax.swing.JLabel usuario_lb;
    private javax.swing.JLabel usuario_png;
    private javax.swing.JTextField usuario_txt;
    // End of variables declaration//GEN-END:variables
}
